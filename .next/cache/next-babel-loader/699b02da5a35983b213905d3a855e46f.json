{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(testSaga);\n\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport \"../reducers/test\"; // SAGA AREA ********************************************************************************************************\n// ******************************************************************************************************************\n// function testAPI() {\n//   return axios.get(`/testURL`);\n// }\n// function* test() {\n//   try {\n//     const result = yield call(testAPI);\n//     yield put({\n//       type: TEST_SUCCESS,\n//       data: result.data,\n//     });\n//   } catch (err) {\n//     console.error(err);\n//     yield put({\n//       type: TEST_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n// ******************************************************************************************************************\n// ******************************************************************************************************************\n// ******************************************************************************************************************\n// function* watchTest() {\n//   yield takeLatest(TEST_REQUEST, test);\n// }\n//////////////////////////////////////////////////////////////\n\nexport default function testSaga() {\n  return _regeneratorRuntime.wrap(function testSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([// fork(watchTest),\n            //\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/seokmanjung/Desktop/4leaf/dark_front/sagas/test.js"],"names":["testSaga","all","call","delay","fork","put","takeLatest","axios"],"mappings":";;oDAoCyBA,Q;;AApCzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAe,kBAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACR;AACA;AAFQ,WAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {} from \"../reducers/test\";\n\n// SAGA AREA ********************************************************************************************************\n// ******************************************************************************************************************\n// function testAPI() {\n//   return axios.get(`/testURL`);\n// }\n\n// function* test() {\n//   try {\n//     const result = yield call(testAPI);\n\n//     yield put({\n//       type: TEST_SUCCESS,\n//       data: result.data,\n//     });\n//   } catch (err) {\n//     console.error(err);\n//     yield put({\n//       type: TEST_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n\n// ******************************************************************************************************************\n// ******************************************************************************************************************\n// ******************************************************************************************************************\n\n// function* watchTest() {\n//   yield takeLatest(TEST_REQUEST, test);\n// }\n\n//////////////////////////////////////////////////////////////\nexport default function* testSaga() {\n  yield all([\n    // fork(watchTest),\n    //\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}